jobs:
  job_common:
    jvm_opts:
      - -XX:+DisableExplicitGC
      - -XX:+HeapDumpOnOutOfMemoryError
      - -XX:+PrintGCApplicationStoppedTime
      - -XX:+PrintGCDateStamps
      - -XX:+PrintGCDetails
      - -XX:+PrintHeapAtGC
      - -XX:+UseConcMarkSweepGC
      - -XX:+UseMembar
      - -XX:CMSInitiatingOccupancyFraction=80
      - -XX:HeapDumpPath={{.PkgStdoutDir}}
      - -Xloggc:{{.PkgStdoutDir}}/gc.log
      - -Xmx128m
      - -verbose:gc
    jvm_properties:
      - java.net.preferIPv4Stack=true
      - java.library.path={{.PkgRootDir}}/lib/native
    config:
      opentsdb.conf:
        - tsd.network.port=%{tsdb.x.base_port+1}
        - tsd.network.bind=0.0.0.0
        - tsd.network.tcp_no_delay=true
        - tsd.network.keep_alive=true
        - tsd.network.reuse_address=true
        - tsd.network.worker_threads=8
        - tsd.network.async_io=true
        - tsd.http.staticroot={{.PkgRootDir}}/staticroot
        - tsd.http.cachedir={{.PkgDataDir}}
        - tsd.http.request.enable_chunked=true # Enable chunk to allow send big request.
        - tsd.http.request.max_chunk=4194304 # The max request size will be 4MB.
        - tsd.core.auto_create_metrics=true
        - tsd.core.enable_ui=false # Disable the UI, because lack of mygnuplot.sh script
        - tsd.core.enable_api=true
        - tsd.storage.enable_compaction=true
        - tsd.storage.flush_interval=1000
        - tsd.storage.fix_duplicates=true # Fix the duplicates keys automatically.
        - tsd.storage.hbase.scanner.maxNumRows=128
        - tsd.storage.hbase.data_table=tsdb
        - tsd.storage.hbase.uid_table=tsdb-uid
        - tsd.storage.hbase.zk_basedir=/hbase/test-hbase  #TODO use %{dependencies.1.cluster_name}
        - tsd.storage.hbase.zk_quorum=%{dependencies.0.zkServer.server_list}
        - tsd.storage.compaction.flush_interval=10
        - tsd.storage.compaction.min_flush_threshold=100
        - tsd.storage.compaction.max_concurrent_flushes=10000
        - tsd.storage.compaction.flush_speed=2
      log4j.properties:
        file: {{.ConfRootDir}}/hdfs/common/log4j.properties
    classpath:
      - {{.PkgConfDir}}
      - {{.PkgRootDir}}/lib
      - {{.PkgRootDir}}/lib/*
  tsdb:
    super_job: job_common
    main_entry:
      java_class: net.opentsdb.tools.TSDMain
      extra_args: --config={{.PkgConfDir}}/opentsdb.conf

  # Following are shell commands.
  fsck:
    super_job: job_common
    main_entry:
      java_class: net.opentsdb.tools.Fsck
      extra_args: --config={{.PkgConfDir}}/opentsdb.conf
  import:
    super_job: job_common
    main_entry:
      java_class: net.opentsdb.tools.TextImporter
      extra_args: --config={{.PkgConfDir}}/opentsdb.conf
  mkmetric:
    super_job: job_common
    main_entry:
      java_class: net.opentsdb.tools.UidManager
      extra_args: --config={{.PkgConfDir}}/opentsdb.conf
  query:
    super_job: job_common
    main_entry:
      java_class: net.opentsdb.tools.CliQuery
      extra_args: --config={{.PkgConfDir}}/opentsdb.conf
  scan:
    super_job: job_common
    main_entry:
      java_class: net.opentsdb.tools.DumpSeries
      extra_args: --config={{.PkgConfDir}}/opentsdb.conf
  search:
    super_job: job_common
    main_entry:
      java_class: net.opentsdb.tools.Search
      extra_args: --config={{.PkgConfDir}}/opentsdb.conf
  uid:
    super_job: job_common
    main_entry:
      java_class: net.opentsdb.tools.UidManager
      extra_args: --config={{.PkgConfDir}}/opentsdb.conf
  version:
    super_job: job_common
    main_entry:
      java_class: net.opentsdb.tools.BuildData
      extra_args: --config={{.PkgConfDir}}/opentsdb.conf
